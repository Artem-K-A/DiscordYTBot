import discord
from discord import app_commands, ui
from discord.ext import commands, tasks
import yt_dlp as youtube_dl
import asyncio
from collections import deque
import math

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞—É–¥–∏–æ
YTDL_OPTIONS = {
    'format': 'bestaudio/best',
    'outtmpl': '%(extractor)s-%(id)s-%(title)s.%(ext)s',
    'restrictfilenames': True,
    'noplaylist': True,
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'logtostderr': False,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'wav',
        'preferredquality': '192',
    }],
}

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
queues = {}
now_playing = {}
player_controls = {}
volume_levels = {}

class Track:
    def __init__(self, info, url):
        self.title = info.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫')
        self.url = url
        self.audio_url = info.get('url')
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞—É–¥–∏–æ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π None –∑–Ω–∞—á–µ–Ω–∏–π
        if 'formats' in info:
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ —Ñ–æ—Ä–º–∞—Ç—ã —Å URL
            audio_formats = [f for f in info['formats'] 
                             if f.get('acodec') != 'none' 
                             and f.get('url')
                             and f.get('abr') is not None]
            
            if audio_formats:
                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–∏—Ç—Ä–µ–π—Ç–æ–≤
                try:
                    best_audio = max(audio_formats,
                                    key=lambda f: float(f.get('abr', 0)))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ float
                    self.audio_url = best_audio['url']
                except:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                    self.audio_url = audio_formats[0]['url']
        
        self.duration = info.get('duration', 0)
        self.thumbnail = info.get('thumbnail', '')
        self.uploader = info.get('uploader', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä')
        
    def get_embed(self):
        embed = discord.Embed(
            title="–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç",
            description=f"[{self.title}]({self.url})",
            color=discord.Color.blue()
        )
        if self.thumbnail:
            embed.set_thumbnail(url=self.thumbnail)
        if self.uploader:
            embed.add_field(name="–ê–≤—Ç–æ—Ä", value=self.uploader, inline=True)
        return embed

class PlayerControls(ui.View):
    def __init__(self, guild_id):
        super().__init__(timeout=None)
        self.guild_id = guild_id
        
    @ui.button(emoji="‚èØÔ∏è", style=discord.ButtonStyle.secondary)
    async def toggle_play(self, interaction: discord.Interaction, button: ui.Button):
        vc = interaction.guild.voice_client
        if not vc:
            return await interaction.response.send_message("–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!", ephemeral=True)
            
        if vc.is_paused():
            vc.resume()
            await interaction.response.send_message("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ", ephemeral=True)
        else:
            vc.pause()
            await interaction.response.send_message("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", ephemeral=True)
        
        await self.update_message(interaction)
        
    @ui.button(emoji="‚è≠Ô∏è", style=discord.ButtonStyle.secondary)
    async def skip_track(self, interaction: discord.Interaction, button: ui.Button):
        vc = interaction.guild.voice_client
        if not vc:
            return await interaction.response.send_message("–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!", ephemeral=True)
            
        if vc.is_playing() or vc.is_paused():
            vc.stop()
            await interaction.response.send_message("‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è", ephemeral=True)
        
    @ui.button(emoji="üîâ", style=discord.ButtonStyle.secondary)
    async def volume_down(self, interaction: discord.Interaction, button: ui.Button):
        guild_id = interaction.guild.id
        current_volume = volume_levels.get(guild_id, 1.0)
        new_volume = max(0.0, current_volume - 0.1)
        volume_levels[guild_id] = new_volume
        
        vc = interaction.guild.voice_client
        if vc and vc.source:
            vc.source.volume = new_volume
            
        await interaction.response.send_message(f"üîâ –ì—Ä–æ–º–∫–æ—Å—Ç—å: {int(new_volume * 100)}%", ephemeral=True)
        await self.update_message(interaction)
        
    @ui.button(emoji="üîä", style=discord.ButtonStyle.secondary)
    async def volume_up(self, interaction: discord.Interaction, button: ui.Button):
        guild_id = interaction.guild.id
        current_volume = volume_levels.get(guild_id, 1.0)
        new_volume = min(2.0, current_volume + 0.1)
        volume_levels[guild_id] = new_volume
        
        vc = interaction.guild.voice_client
        if vc and vc.source:
            vc.source.volume = new_volume
            
        await interaction.response.send_message(f"üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å: {int(new_volume * 100)}%", ephemeral=True)
        await self.update_message(interaction)
        
    @ui.button(emoji="üóëÔ∏è", style=discord.ButtonStyle.danger)
    async def stop_player(self, interaction: discord.Interaction, button: ui.Button):
        vc = interaction.guild.voice_client
        if vc:
            if vc.is_playing() or vc.is_paused():
                vc.stop()
            await vc.disconnect()
            
            guild_id = interaction.guild.id
            if guild_id in queues:
                queues[guild_id].clear()
            if guild_id in now_playing:
                del now_playing[guild_id]
            
            await interaction.response.send_message("‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
        else:
            await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É", ephemeral=True)
    
    async def update_message(self, interaction: discord.Interaction):
        guild_id = interaction.guild.id
        if guild_id in player_controls:
            message = player_controls[guild_id]
            try:
                await message.edit(view=self)
            except:
                pass

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True

bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!')
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

async def play_next(guild):
    guild_id = guild.id
    if guild_id in queues and queues[guild_id]:
        next_track = queues[guild_id].popleft()
        now_playing[guild_id] = next_track
        
        vc = guild.voice_client
        if not vc:
            return
            
        volume = volume_levels.get(guild_id, 1.0)
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—É–¥–∏–æ URL
            if not next_track.audio_url:
                raise ValueError(f"–ê—É–¥–∏–æ URL –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ç—Ä–µ–∫–∞: {next_track.title}")
                
            source = discord.FFmpegPCMAudio(
                next_track.audio_url,
                before_options='-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
                options='-vn'
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏
            source = discord.PCMVolumeTransformer(source, volume=volume)
            
            def after_playing(error):
                if error:
                    print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {error}")
                asyncio.run_coroutine_threadsafe(play_next(guild), bot.loop)
            
            vc.play(source, after=after_playing)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç—Ä–æ–ª–∞–º–∏
            if guild_id in player_controls:
                try:
                    message = player_controls[guild_id]
                    view = PlayerControls(guild_id)
                    await message.edit(content=f"üéµ **–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** [{next_track.title}]({next_track.url})", embed=next_track.get_embed(), view=view)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")
            # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫
            await asyncio.sleep(1)
            await play_next(guild)
    else:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏
        if guild_id in now_playing:
            del now_playing[guild_id]
        if guild_id in player_controls:
            try:
                message = player_controls[guild_id]
                await message.edit(content="üéµ –û—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—É—Å—Ç–∞", view=None, embed=None)
            except:
                pass

@bot.tree.command(name="play", description="–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ YouTube –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å")
@app_commands.describe(url="–°—Å—ã–ª–∫–∞ –Ω–∞ YouTube –≤–∏–¥–µ–æ –∏–ª–∏ Shorts")
async def play(interaction: discord.Interaction, url: str):
    await interaction.response.defer()
    
    user = interaction.user
    if not user.voice:
        return await interaction.followup.send("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–π–¥–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!")
    
    voice_channel = user.voice.channel
    guild_id = interaction.guild.id
    
    if guild_id not in queues:
        queues[guild_id] = deque()
    if guild_id not in volume_levels:
        volume_levels[guild_id] = 1.0
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É
        vc = interaction.guild.voice_client
        if not vc:
            vc = await voice_channel.connect()
        elif vc.channel != voice_channel:
            await vc.move_to(voice_channel)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–µ–∫–µ
        with youtube_dl.YoutubeDL(YTDL_OPTIONS) as ydl:
            info = ydl.extract_info(url, download=False)
            track = Track(info, url)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å
        queues[guild_id].append(track)
        queue_position = len(queues[guild_id])
        
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        if not vc.is_playing() and not vc.is_paused():
            await play_next(interaction.guild)
            response = f"üéµ **–ù–∞—á–∏–Ω–∞—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ:** [{track.title}]({url})"
        else:
            response = f"üéµ **–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å (#{queue_position}):** [{track.title}]({url})"
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç—Ä–æ–ª–∞–º–∏
        view = PlayerControls(guild_id)
        if guild_id in now_playing:
            current_track = now_playing[guild_id]
            embed = current_track.get_embed()
            content = f"üéµ **–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** [{current_track.title}]({current_track.url})"
        else:
            embed = None
            content = response
        
        if guild_id in player_controls:
            try:
                message = player_controls[guild_id]
                await message.edit(content=content, embed=embed, view=view)
                await interaction.followup.send(response)
            except:
                message = await interaction.followup.send(content, embed=embed, view=view)
                player_controls[guild_id] = message
        else:
            message = await interaction.followup.send(content, embed=embed, view=view)
            player_controls[guild_id] = message
        
    except Exception as e:
        await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()

@bot.tree.command(name="queue", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
async def show_queue(interaction: discord.Interaction):
    guild_id = interaction.guild.id
    if guild_id not in queues or not queues[guild_id]:
        return await interaction.response.send_message("üéµ –û—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—É—Å—Ç–∞")
    
    queue_list = []
    for i, track in enumerate(queues[guild_id], 1):
        queue_list.append(f"{i}. [{track.title}]({track.url})")
    
    embed = discord.Embed(
        title="–û—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è",
        description="\n".join(queue_list[:10]),
        color=discord.Color.green()
    )
    
    if len(queues[guild_id]) > 10:
        embed.set_footer(text=f"–ò –µ—â—ë {len(queues[guild_id]) - 10} —Ç—Ä–µ–∫–æ–≤...")
    
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="skip", description="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫")
async def skip(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if not vc or not vc.is_playing():
        return await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç", ephemeral=True)
    
    vc.stop()
    await interaction.response.send_message("‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω")

@bot.tree.command(name="pause", description="–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def pause(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if not vc or not vc.is_playing():
        return await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç", ephemeral=True)
    
    if vc.is_paused():
        return await interaction.response.send_message("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", ephemeral=True)
    
    vc.pause()
    await interaction.response.send_message("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

@bot.tree.command(name="resume", description="–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def resume(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if not vc:
        return await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É", ephemeral=True)
    
    if not vc.is_paused():
        return await interaction.response.send_message("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —É–∂–µ –∏–¥–µ—Ç", ephemeral=True)
    
    vc.resume()
    await interaction.response.send_message("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ")

@bot.tree.command(name="volume", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å (0-200%)")
@app_commands.describe(level="–£—Ä–æ–≤–µ–Ω—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏ (0-200)")
async def set_volume(interaction: discord.Interaction, level: int):
    guild_id = interaction.guild.id
    volume = max(0, min(200, level)) / 100.0
    volume_levels[guild_id] = volume
    
    vc = interaction.guild.voice_client
    if vc and vc.source:
        vc.source.volume = volume
    
    await interaction.response.send_message(f"üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {level}%")
    
    if guild_id in player_controls:
        try:
            message = player_controls[guild_id]
            view = PlayerControls(guild_id)
            await message.edit(view=view)
        except:
            pass

@bot.tree.command(name="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å")
async def stop(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    guild_id = interaction.guild.id
    
    if vc:
        if vc.is_playing() or vc.is_paused():
            vc.stop()
        
        await vc.disconnect()
        
        if guild_id in queues:
            queues[guild_id].clear()
        if guild_id in now_playing:
            del now_playing[guild_id]
        
        if guild_id in player_controls:
            try:
                message = player_controls[guild_id]
                await message.delete()
                del player_controls[guild_id]
            except:
                pass
        
        await interaction.response.send_message("‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
    else:
        await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É", ephemeral=True)

@bot.tree.command(name="nowplaying", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫")
async def now_playing_cmd(interaction: discord.Interaction):
    guild_id = interaction.guild.id
    if guild_id in now_playing:
        track = now_playing[guild_id]
        embed = track.get_embed()
        await interaction.response.send_message(embed=embed)
    else:
        await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç", ephemeral=True)

bot.run('–í–∞—à —Ç–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞')